@using System.Security.Claims
@model IEnumerable<TaskManagementApp.Models.TaskItem>

@{
    ViewData["Title"] = "Dashboard";
}

<h1>Dashboard</h1>

<!-- Search and Filter Form -->
<form method="get" class="form-inline mb-3">
    <input type="text" name="searchTerm" class="form-control mr-2" placeholder="Search tasks..." value="@ViewContext.HttpContext.Request.Query["searchTerm"]" />

    <select name="statusFilter" class="form-control mr-2">
        @foreach (var option in (List<SelectListItem>)ViewData["StatusOptions"])
        {
            if (option.Selected)
            {
                <option value="@option.Value" selected>@option.Text</option>
            }
            else
            {
                <option value="@option.Value">@option.Text</option>
            }
        }
    </select>

    <button type="submit" class="btn btn-primary">Apply</button>
</form>

<!-- Sorting Options -->
<div class="mb-3">
    <a href="?sortOrder=Priority" class="btn btn-secondary mr-2">Sort by Priority</a>
    <a href="?sortOrder=DueDate" class="btn btn-secondary mr-2">Sort by Due Date</a>
    <a href="?sortOrder=CreatedAt" class="btn btn-secondary">Sort by Created Date</a>
</div>

<p>
    <a asp-action="Create" class="btn btn-success">Create New Task</a>
</p>

<!-- Tasks Table -->
<table class="table table-striped">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Title)</th>
            <th>@Html.DisplayNameFor(model => model.Description)</th>
            <th>@Html.DisplayNameFor(model => model.Priority)</th>
            <th>@Html.DisplayNameFor(model => model.Status)</th>
            <th>@Html.DisplayNameFor(model => model.DueDate)</th>
            <th>@Html.DisplayNameFor(model => model.UserName)</th>
            <th>@Html.DisplayNameFor(model => model.CreatedAt)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Any())
        {
            <tr>
                <td colspan="8" class="text-center">No tasks found.</td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>@Html.DisplayFor(modelItem => item.Priority)</td>
                    <td>@Html.DisplayFor(modelItem => item.Status)</td>
                    <td>@item.DueDate.ToString("yyyy-MM-dd")</td>
                    <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                    <td>@item.CreatedAt.ToString("yyyy-MM-dd")</td>
                    <td>
                        @if (item.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                        }
                        else
                        {
                            <span class="text-muted">View Only</span>
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
